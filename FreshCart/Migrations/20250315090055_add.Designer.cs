// <auto-generated />
using System;
using FreshCart.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FreshCart.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250315090055_add")]
    partial class add
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FreshCart.Models.Domain.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("FreshCart.Models.Domain.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7bbb9a6e-27f2-49ca-a62a-59f04c940090"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7549),
                            ImageUrl = "https://ecommerce.routemisr.com/Route-Academy-categories/1681511964020.jpeg",
                            Name = "Music",
                            Slug = "music",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7551)
                        },
                        new
                        {
                            Id = new Guid("40d9125c-01b3-4084-b60f-2a4fee924765"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7555),
                            ImageUrl = "https://ecommerce.routemisr.com/Route-Academy-categories/1681511865180.jpeg",
                            Name = "Men's Fashion",
                            Slug = "men's-fashion",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7555)
                        },
                        new
                        {
                            Id = new Guid("046a4dd7-9529-4de1-bcd9-25e1f188577d"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7557),
                            ImageUrl = "https://ecommerce.routemisr.com/Route-Academy-categories/1681511818071.jpeg",
                            Name = "Women's Fashion",
                            Slug = "women's-fashion",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7558)
                        },
                        new
                        {
                            Id = new Guid("451bbac9-4ae4-4c3d-a957-5c855af41d26"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7560),
                            ImageUrl = "https://ecommerce.routemisr.com/Route-Academy-categories/1681511452254.png",
                            Name = "SuperMarket",
                            Slug = "supermarket",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7561)
                        },
                        new
                        {
                            Id = new Guid("bbb1a413-c3b4-455f-abb2-0cddf59cf2dd"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7564),
                            ImageUrl = "https://ecommerce.routemisr.com/Route-Academy-categories/1681511427130.png",
                            Name = "Baby & Toys",
                            Slug = "baby-and-toys",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7564)
                        },
                        new
                        {
                            Id = new Guid("67f73162-8eff-43fe-b693-3951a800b20d"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7566),
                            ImageUrl = "https://ecommerce.routemisr.com/Route-Academy-categories/1681511392672.png",
                            Name = "Home",
                            Slug = "home",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7567)
                        },
                        new
                        {
                            Id = new Guid("b39860b5-91b7-41dd-b52b-22d2ee9c4ec4"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7568),
                            ImageUrl = "https://ecommerce.routemisr.com/Route-Academy-categories/1681511368164.png",
                            Name = "Books",
                            Slug = "books",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7569)
                        },
                        new
                        {
                            Id = new Guid("41c1d6bf-035b-490d-a5a5-80990a61ac32"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7570),
                            ImageUrl = "https://ecommerce.routemisr.com/Route-Academy-categories/1681511179514.png",
                            Name = "Beauty & Health",
                            Slug = "beauty-and-health",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7571)
                        },
                        new
                        {
                            Id = new Guid("716b7818-280f-4c6d-b221-010b314d6929"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7572),
                            ImageUrl = "https://ecommerce.routemisr.com/Route-Academy-categories/1681511156008.png",
                            Name = "Mobiles",
                            Slug = "mobiles",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7573)
                        },
                        new
                        {
                            Id = new Guid("9e89c85a-3d53-4dc0-b76f-8ca8f070caba"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7574),
                            ImageUrl = "https://ecommerce.routemisr.com/Route-Academy-categories/1681511121316.png",
                            Name = "Electronics",
                            Slug = "electronics",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7575)
                        });
                });

            modelBuilder.Entity("FreshCart.Models.Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageCoverUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagesUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("RatingsAverage")
                        .HasColumnType("float");

                    b.Property<int>("RatingsQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Sold")
                        .HasColumnType("int");

                    b.Property<Guid>("SubCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("FreshCart.Models.Domain.SubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("78e2f979-426e-404b-aaba-4d7d6e603132"),
                            CategoryId = new Guid("bbb1a413-c3b4-455f-abb2-0cddf59cf2dd"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7716),
                            Name = "Diapers & Diaper Bags",
                            Slug = "diapers-and-diaper-bags",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7716)
                        },
                        new
                        {
                            Id = new Guid("ab7f04c3-2f88-46c5-a218-055f7e9a9325"),
                            CategoryId = new Guid("bbb1a413-c3b4-455f-abb2-0cddf59cf2dd"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7720),
                            Name = "Baby Safety Products",
                            Slug = "baby-safety-products",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7720)
                        },
                        new
                        {
                            Id = new Guid("254379ac-5f27-4916-a992-b20cbf21fac3"),
                            CategoryId = new Guid("451bbac9-4ae4-4c3d-a957-5c855af41d26"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7731),
                            Name = "Pet Supplies",
                            Slug = "pet-supplies",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7732)
                        },
                        new
                        {
                            Id = new Guid("abc2c203-fcb7-497d-bc8c-54f83cdfb93f"),
                            CategoryId = new Guid("451bbac9-4ae4-4c3d-a957-5c855af41d26"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7734),
                            Name = "Candy & Chocolate",
                            Slug = "candy-and-chocolate",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7734)
                        },
                        new
                        {
                            Id = new Guid("ea1655d6-fc27-4dde-819b-f420d64285fe"),
                            CategoryId = new Guid("451bbac9-4ae4-4c3d-a957-5c855af41d26"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7736),
                            Name = "Baby Food",
                            Slug = "baby-food",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7737)
                        },
                        new
                        {
                            Id = new Guid("ffb35f56-8700-4750-bb1b-1647e1f3ad22"),
                            CategoryId = new Guid("451bbac9-4ae4-4c3d-a957-5c855af41d26"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7739),
                            Name = "Breakfast Food",
                            Slug = "breakfast-food",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7739)
                        },
                        new
                        {
                            Id = new Guid("75e59689-9d18-414d-9037-f5177b0de36f"),
                            CategoryId = new Guid("451bbac9-4ae4-4c3d-a957-5c855af41d26"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7741),
                            Name = "Snack Food",
                            Slug = "snack-food",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7742)
                        },
                        new
                        {
                            Id = new Guid("72c79f91-ac64-4ff6-a14b-ad779fb8cdab"),
                            CategoryId = new Guid("451bbac9-4ae4-4c3d-a957-5c855af41d26"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7744),
                            Name = "Home Care & Cleaning",
                            Slug = "home-care-and-cleaning",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7744)
                        },
                        new
                        {
                            Id = new Guid("0e7a1aa5-de2c-4d01-82fd-fea5feffbecf"),
                            CategoryId = new Guid("451bbac9-4ae4-4c3d-a957-5c855af41d26"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7746),
                            Name = "Beverages",
                            Slug = "beverages",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7746)
                        },
                        new
                        {
                            Id = new Guid("62771190-e326-429f-b253-b7112db8e28d"),
                            CategoryId = new Guid("451bbac9-4ae4-4c3d-a957-5c855af41d26"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7749),
                            Name = "Canned Dry and Packaged Foods",
                            Slug = "canned-dry-and-packaged-foods",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7749)
                        },
                        new
                        {
                            Id = new Guid("b377ed23-ed9d-4072-84e2-9f2e7dc06f8f"),
                            CategoryId = new Guid("41c1d6bf-035b-490d-a5a5-80990a61ac32"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7753),
                            Name = "Skin Care",
                            Slug = "skin-care",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7754)
                        },
                        new
                        {
                            Id = new Guid("4571f58d-dff6-4f1a-b02f-4e8c4dccc226"),
                            CategoryId = new Guid("41c1d6bf-035b-490d-a5a5-80990a61ac32"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7756),
                            Name = "Hair Care",
                            Slug = "hair-care",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7756)
                        },
                        new
                        {
                            Id = new Guid("4ff2068f-6394-41b6-8228-915f0db26e24"),
                            CategoryId = new Guid("41c1d6bf-035b-490d-a5a5-80990a61ac32"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7758),
                            Name = "Makeup",
                            Slug = "makeup",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7759)
                        },
                        new
                        {
                            Id = new Guid("9c30614a-4849-4463-81b0-284b90a84741"),
                            CategoryId = new Guid("41c1d6bf-035b-490d-a5a5-80990a61ac32"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7761),
                            Name = "Fragrance",
                            Slug = "fragrance",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7761)
                        },
                        new
                        {
                            Id = new Guid("9fff2ac6-e92b-4565-8149-8df5f1fe6bd2"),
                            CategoryId = new Guid("bbb1a413-c3b4-455f-abb2-0cddf59cf2dd"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7763),
                            Name = "Toys",
                            Slug = "toys",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7763)
                        },
                        new
                        {
                            Id = new Guid("d6a53f44-56a6-4ec2-ba83-3995cc592b09"),
                            CategoryId = new Guid("bbb1a413-c3b4-455f-abb2-0cddf59cf2dd"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7765),
                            Name = "Potty Training",
                            Slug = "potty-training",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7766)
                        },
                        new
                        {
                            Id = new Guid("10363adb-1dbc-4afe-87d5-f7052470433e"),
                            CategoryId = new Guid("bbb1a413-c3b4-455f-abb2-0cddf59cf2dd"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7768),
                            Name = "Bouncers & Swings",
                            Slug = "bouncers-and-swings",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7768)
                        },
                        new
                        {
                            Id = new Guid("2ee5fd43-4f76-4252-a29f-2e07b0718a80"),
                            CategoryId = new Guid("bbb1a413-c3b4-455f-abb2-0cddf59cf2dd"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7770),
                            Name = "Car Seats & Strollers",
                            Slug = "car-seats-and-strollers",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7771)
                        },
                        new
                        {
                            Id = new Guid("794b185b-ce0c-4c93-a947-15091e9ed979"),
                            CategoryId = new Guid("bbb1a413-c3b4-455f-abb2-0cddf59cf2dd"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7775),
                            Name = "Nursing & Feeding",
                            Slug = "nursing-and-feeding",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7776)
                        },
                        new
                        {
                            Id = new Guid("66d54eb1-64bd-45f9-b2cc-db1d575fd570"),
                            CategoryId = new Guid("bbb1a413-c3b4-455f-abb2-0cddf59cf2dd"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7778),
                            Name = "Bathing & Skin Care",
                            Slug = "bathing-and-skin-care",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7778)
                        },
                        new
                        {
                            Id = new Guid("f40f6b52-2ff5-4a37-bd67-1ad00f2e29a5"),
                            CategoryId = new Guid("9e89c85a-3d53-4dc0-b76f-8ca8f070caba"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7780),
                            Name = "Computer Accessories",
                            Slug = "computer-accessories",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7781)
                        },
                        new
                        {
                            Id = new Guid("128d789a-4c9b-4fb8-bf67-4d0f86d247ae"),
                            CategoryId = new Guid("9e89c85a-3d53-4dc0-b76f-8ca8f070caba"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7783),
                            Name = "Computer Components",
                            Slug = "computer-components",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7783)
                        },
                        new
                        {
                            Id = new Guid("c75f021e-f2a3-47b9-9956-590b686bb12a"),
                            CategoryId = new Guid("9e89c85a-3d53-4dc0-b76f-8ca8f070caba"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7785),
                            Name = "Data Storage",
                            Slug = "data-storage",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7785)
                        },
                        new
                        {
                            Id = new Guid("f43c48dc-ea73-450f-8255-92d20ff88576"),
                            CategoryId = new Guid("9e89c85a-3d53-4dc0-b76f-8ca8f070caba"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7787),
                            Name = "Networking Products",
                            Slug = "networking-products",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7788)
                        },
                        new
                        {
                            Id = new Guid("099c3527-c996-4cb1-9b15-926f6959db9c"),
                            CategoryId = new Guid("9e89c85a-3d53-4dc0-b76f-8ca8f070caba"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7790),
                            Name = "Printers & Accessories",
                            Slug = "printers-and-accessories",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7790)
                        },
                        new
                        {
                            Id = new Guid("bd11ab09-6c84-4077-905a-6f2f53255e6c"),
                            CategoryId = new Guid("9e89c85a-3d53-4dc0-b76f-8ca8f070caba"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7792),
                            Name = "Cameras & Accessories",
                            Slug = "cameras-and-accessories",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7792)
                        },
                        new
                        {
                            Id = new Guid("995415ec-f9d9-4a2c-9283-8b0168db14fd"),
                            CategoryId = new Guid("9e89c85a-3d53-4dc0-b76f-8ca8f070caba"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7797),
                            Name = "Video Games",
                            Slug = "video-games",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7797)
                        },
                        new
                        {
                            Id = new Guid("1755a2f5-20c2-4d82-b8ea-b572c5eb3fa6"),
                            CategoryId = new Guid("9e89c85a-3d53-4dc0-b76f-8ca8f070caba"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7799),
                            Name = "Audio & Home Entertainment",
                            Slug = "audio-and-home-entertainment",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7800)
                        },
                        new
                        {
                            Id = new Guid("3c28ad1b-697d-42e9-a05a-83257a3b4c5f"),
                            CategoryId = new Guid("9e89c85a-3d53-4dc0-b76f-8ca8f070caba"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7877),
                            Name = "Laptops & Accessories",
                            Slug = "laptops-and-accessories",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7878)
                        },
                        new
                        {
                            Id = new Guid("937ab0cd-20d9-4458-b648-49675d9deed7"),
                            CategoryId = new Guid("9e89c85a-3d53-4dc0-b76f-8ca8f070caba"),
                            CreatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7880),
                            Name = "TVs, Satellites & Accessories",
                            Slug = "tvs-satellites-and-accessories",
                            UpdatedAt = new DateTime(2025, 3, 15, 9, 0, 55, 264, DateTimeKind.Utc).AddTicks(7880)
                        });
                });

            modelBuilder.Entity("FreshCart.Models.Domain.Product", b =>
                {
                    b.HasOne("FreshCart.Models.Domain.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FreshCart.Models.Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FreshCart.Models.Domain.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("FreshCart.Models.Domain.SubCategory", b =>
                {
                    b.HasOne("FreshCart.Models.Domain.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FreshCart.Models.Domain.Category", b =>
                {
                    b.Navigation("SubCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
